  JDBC.txt
  
   커넥션풀 : 디비 연결하기위한 객체. 빈번한 디비 연결/호출으로 메모리낭비(누수)가 발생
   미리 연결정보(Connection)생성하고 필요할때마다 빌려주고, 다쓰면 반납하는 방식
   
   * 커넥션풀 작동
   1) 사용자 요청(Service)에 따른 연결정보 1개씩 할당
       pool => [ con | con | con | con | con | con ]
   2) 커넥션(연결정보) 개수를 제한
   3) 커넥션 객체를 다쓰게되면 자원 회수
   - 사용자 요청시 풀안에 객체의 정보가 없을경우 대기하거나 임시객체를 생성
  
   해당 라이브러리 다운로드 주소 
  http://commons.apache.org/
  
  - pool / dbcp / collection  해당버전에 맞는 파일 /WEB-INF/lib/ 추가 
  
  
   
  JNDI(Java Naming and Directory Interface)
  : 필요한 데이터를  키-값 쌍으로 저장해서 필요시마다 키 값을 사용해서 값을 가져오는 방법
  
  * 내장객체.setAttribute("키",값); => 내장객체.getAttribute("키");
  * 컬렉션 - 해시맵/해시테이블 ("키",값)
  * DNS서버(도메인서버) - 도메인 네임에 해당하는 IP정보를 저장
  * 톰캣 (컨테이너) - ConnectionPool 생성  이름에 해당하는 정보를 저장, 디비정보객체 저장
  
  
  
  
  
  

